<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="global.sesoc.ConsolGame.dao.GameListMapper">

	
	
	<select id="selectAll" parameterType="map" resultType="ConsolGameStatusVO">
		select
		distinct c.gamenum as gamenum,
		c.gametitle as gametitle,
		c.production as production,
		c.content as production,
		c.imageurl as imageurl,
		c.genre as genre,
		c.typename as typename,
		decode(l.status, 'lent',
		    	'lent', 'notlent') as status
		from consolgame c,LENDCONSOL l
        where
        c.gamenum = l.GAMENUM(+)
        and l.STATUS(+) = 'lent'
        
		<if test="searchList != null">
			and ${searchList} LIKE '%'||#{searchItem}||'%'
		</if>
		order by c.GAMENUM desc
	</select>


	<select id="selectOneGame" parameterType="ConsolGame" resultType="ConsolGameStatusVO">
		select
		c.gamenum as gamenum,
		c.gametitle as gametitle,
		c.production as production,
		c.content as production,
		c.imageurl as imageurl,
		c.genre as genre,
		c.typename as typename,
		l.status as status
		from consolgame c,LENDCONSOL l
        where
        c.gamenum = l.GAMENUM(+)
        and l.STATUS(+) = 'lent'
        and c.gamenum = #{gamenum}
        and rownum = 1
        order by l.gamenum desc
	</select>


	<insert id="reQuestlendGame" parameterType="LendConsol">
		insert into
		lendconsol
		(
		lend,
		usernum,
		status,
		gamenum
		)
		values
		(
		lend_seq.nextval,
		#{usernum},
		#{status},
		#{gamenum}
		)

	</insert>


	<select id="RequestList" parameterType="map" resultType="LendConsolUserTitle">
		select
		*
		from consolgame join LendConsol using (GAMENUM)
            left outer join ConsolUser using(usernum)
		WHERE
		status ='reserved'
		<if test="searchList != null">
			and ${searchList} LIKE '%'||#{searchItem}||'%'
		</if>
		order by lend asc
	</select>
	<update id="confirmRequest" parameterType="map">
	update LendConsol
	set
	STATUS = #{lendConsol.status}
	<if test="lendConsol.status == 'lent'">
	,STARTDATE = sysdate
	,ENDDATE = sysdate + #{selectDate}
	</if>
	WHERE
	lend =#{lendConsol.lend}
	</update>
	
	
	<select id="selectlentGame" parameterType="LendConsol" resultType="LendConsol">
	SELECT
	GAMENUM
	FROM
	LendConsol
	WHERE
	lend =#{lend}
	</select>
	
	<update id="chaingOtherRequest" parameterType="map">
	update LendConsol
	set
	STATUS = #{after}
	WHERE
	gamenum = #{gamenum.gamenum} and STATUS = #{before}
	</update>
	
	<select id="selectAllLent" parameterType="map" resultType="LendConsolUserTitle">
		select
		lend
		,GAMENUM
		,usernum
		,gametitle
		,username
		,to_char(startdate, 'YYYY-MM-DD') AS startdate
		,to_char(ENDDATE, 'YYYY-MM-DD') AS ENDDATE
		,to_char(TO_DATE(sysdate,'YYYY-MM-DD') -  TO_DATE(ENDDATE, 'YYYY-MM-DD')) as RETURNDATE
		from LendConsol full outer join consolgame using (GAMENUM)
           full outer join ConsolUser using(usernum)
		WHERE
			STATUS = #{status}
		<if test="searchList != null">
			and ${searchList} LIKE '%'||#{searchItem}||'%'
		</if>
		order by ENDDATE asc
	</select>	
	
	
	<update id="returnGame" parameterType="map">
	update LendConsol
	set
	STATUS = #{after}
	,returndate = sysdate
	WHERE
	lend = #{lendConsol.lend} and STATUS = #{before}
	</update>
	
	<select id="selectAllUserlent" parameterType="LendConsolUser" resultType="LendConsolUser">
	select
	lend
	,gamenum
	,usernum
	,to_char(startdate, 'YYYY-MM-DD') AS startdate
	,to_char(ENDDATE, 'YYYY-MM-DD') AS ENDDATE
    ,to_char(returndate, 'YYYY-MM-DD') AS returndate
	,status
    ,gametitle
    ,typename
	,imageurl
	from LendConsol join consolgame using (GAMENUM)
    where usernum = #{usernum}
    order by lend desc
	</select>
	
	<update id="checkDelayLendForAllLentBook">
		update LendConsol
		set
			status = 'delayed'
		where
			status = 'lent'
			and
			to_date(to_char(enddate, 'yyyy-mm-dd'), 'yyyy-mm-dd')
			&lt; to_date(to_char(sysdate, 'yyyy-mm-dd'), 'yyyy-mm-dd')
	</update>		

	<select id="countUser" resultType="java.lang.Integer">
	select count(*) from CONSOLUSER
	</select>
	<select id="countNewUser" resultType="java.lang.Integer">
	select count(*) from CONSOLUSER where to_char(registerdate, 'YYYY-MM-DD') = to_char(sysdate, 'YYYY-MM-DD')
	</select>
	<select id="countConsol" resultType="java.lang.Integer">
	select count(*) from CONSOLGAME
	</select>
	<select id="countreserved" resultType="java.lang.Integer">
	select count(*) from LENDCONSOL where STATUS = 'reserved'
	</select>
	<select id="countAllLent" resultType="java.lang.Integer">
	select count(*) from LENDCONSOL
	</select>
	<select id="rentCount" resultType="java.lang.Integer">
	select count(*) from LENDCONSOL where STATUS = 'lent'
	</select>	
	<select id="countReturned" resultType="java.lang.Integer">
	select count(*) from LENDCONSOL where STATUS = 'returned'
	</select>	
	<select id="countDelayed" resultType="java.lang.Integer">
	select count(*) from LENDCONSOL where STATUS = 'delayed'
	</select>	
	<select id="countDelayReturened" resultType="java.lang.Integer">
	select count(*) from LENDCONSOL where STATUS = 'delay_returned'
	</select>

	<select id="getRank" resultType="GameRank">
	select  gamenum, count(gamenum) as rank, gametitle 
	from LENDCONSOL join CONSOLGAME 
	using(gamenum) group by(gamenum,gametitle)  
	order by count(gamenum) desc
	</select>
		
</mapper>